# include<iostream>

using namespace std;


const int n = 30;			//максимальное количество символов в строке
// Задание №1
// для заданной строки вывести строку без повторений одного и того же слова подряд
//функция копирует слово из tmp, в новую строку line_new
void copy_str(char * str1, char * str2, int &index, int  count)  // index- индекс первой буквы последующего слова, count- длина записываемого слова в новую строку
{
	int i = 0;
	while (i < count)
	{
		str1[index] = str2[i];
		index++;
		i++;
	}
	return;
}
//------------------------------------------------------------------------------------------------------------------
//функция проверяет вхождение строки tmp в строку line_new
int strcmp_my(char *str1, char *str2, int l_new, int l_tmp) 
{
	int fl = 0;				  //признак полного совпадения слова
	if (l_new == 0)			  // если в новой строке нет еще слова, то flag =1- нет повторений
		return 1;
	int i = 0;				 //переменная счетчика
	while (i < l_new)
	{
		int j = 0;
		while (str1[i] != ' ') // пока не конец слова, сравниваем его с tmp
		{
			while ((str1[i] == str2[j])&& (j<l_tmp))
			{
				fl += 1;
				i++;
				j++;
			}
			while (str1[i] != ' ') 
			{
				i++;		  // переход на следующее слово
			}
	
		}
		if (fl == l_tmp)	 // слово уже есть в новой строке
			return 0;
		i++;				 //пропуск пробела
	}
	return 1;
}
//----------------------------------------------------------------------------------------------------------------------
// функция выделяет слово из строки line
int word(char* line_str, char *str_tmp, int &index, int len) // выделяем слово из строки
{ int j = 0; // длина слова
   while (line_str[index] != ' ' &&  index<len)		// формируем слово из строки в tmp;      
  {
	str_tmp[j] = line_str[index];
	j++;
	index++;
  }
   return j;
}
//------------------------------------------------------------------------------------------------------------------------------------------------
int main()
{	setlocale(LC_ALL, "");
	char line[] = "We don't repeat twice twice";  // объявления и инициализация строки
	char line_new[n];							 //новая строка без повторений
	memset(line_new, NULL, n);
	std::cout << "Заданная строка: " <<line<< std::endl;
	int flag = 1;								 // признак повторения слова. 0 - слово уже встречалось
	int l = strlen(line); // длина строки
	int i = 0;
	int num = 0;								// порядковый номер символа в строке исходной
	int num1 = 0;								// порядковый номер символа в строке новой
	   	while (num < l)  // пока не конец строки
     	{
		  char tmp[n];
		  memset(tmp,NULL, n);
		  int j=word(line,tmp, num,l);			// формирует слово из строки и возвращает длину слова
		  std::cout << "слово: " << tmp << std::endl;
		  flag = strcmp_my(line_new, tmp,num1,j);//вызов функции, которая проверяет вхождение строки tmp в строку line_new, 0- слово уже есть в строке
		  tmp[j] = ' ';
		  j++;
		  if (flag==1)							 //если нет повторения слова, то записываем его в новую строку
		  {
		 	copy_str(line_new, tmp, num1, j);	 // копирует неповторяющееся слово в новую строку
		  }
		num++;									 // передвижения по строке 
	}
	std::cout << "Новая строка:   " << line_new << std::endl;
	return 0;
}





